{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SortPipe {\n  transform(value, args) {\n    const sortField = args[0];\n    const sortDirection = args[1];\n    if (sortDirection) value.sort((a, b) => {\n      if (a[sortField] < b[sortField]) return 1;\n      if (a[sortField] > b[sortField]) return -1;\n      return 0;\n    });\n    return value;\n  }\n  static #_ = this.ɵfac = function SortPipe_Factory(t) {\n    return new (t || SortPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"sort\",\n    type: SortPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["SortPipe","transform","value","args","sortField","sortDirection","sort","a","b","_","_2","pure"],"sources":["E:\\Projects\\easyBook\\easyBook-app\\src\\app\\pipe\\sort.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: Array<string>, args:any[]): any {\n    const sortField=args[0];\n    const sortDirection=args[1];\n    if(sortDirection)\n    value.sort((a:any,b:any)=>{\n      if(a[sortField]<b[sortField])\n      return 1;\n      if(a[sortField]>b[sortField])\n      return -1;\n      return 0;\n    });\n    return value;\n  }\n\n} \n"],"mappings":";AAKA,OAAM,MAAOA,QAAQ;EAEnBC,SAASA,CAACC,KAAoB,EAAEC,IAAU;IACxC,MAAMC,SAAS,GAACD,IAAI,CAAC,CAAC,CAAC;IACvB,MAAME,aAAa,GAACF,IAAI,CAAC,CAAC,CAAC;IAC3B,IAAGE,aAAa,EAChBH,KAAK,CAACI,IAAI,CAAC,CAACC,CAAK,EAACC,CAAK,KAAG;MACxB,IAAGD,CAAC,CAACH,SAAS,CAAC,GAACI,CAAC,CAACJ,SAAS,CAAC,EAC5B,OAAO,CAAC;MACR,IAAGG,CAAC,CAACH,SAAS,CAAC,GAACI,CAAC,CAACJ,SAAS,CAAC,EAC5B,OAAO,CAAC,CAAC;MACT,OAAO,CAAC;IACV,CAAC,CAAC;IACF,OAAOF,KAAK;EACd;EAAC,QAAAO,CAAA,G;qBAdUT,QAAQ;EAAA;EAAA,QAAAU,EAAA,G;;UAARV,QAAQ;IAAAW,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}