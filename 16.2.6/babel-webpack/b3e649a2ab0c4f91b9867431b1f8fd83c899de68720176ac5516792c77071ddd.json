{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(value, filter) {\n    const resultArray = [];\n    if (filter.length === 0) return value;\n    console.log(filter);\n    for (const item of value) {\n      if (filter.includes(item['City'])) {\n        resultArray.push(item);\n      }\n    }\n    console.log(resultArray);\n    return resultArray;\n  }\n  static #_ = this.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FilterPipe","transform","value","filter","resultArray","length","console","log","item","includes","push","_","_2","pure"],"sources":["E:\\Projects\\easyBook\\easyBook-app\\src\\app\\pipe\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filter:Array<any>): any[] {\n    const resultArray=[];\n    if(filter.length===0)\n    return value;\n  console.log(filter);\n  for(const item of value){\n    \n    if(filter.includes(item['City']))\n    {\n      resultArray.push(item);\n    }\n  }\n  console.log(resultArray);\n  return resultArray;\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,UAAU;EAErBC,SAASA,CAACC,KAAY,EAAEC,MAAiB;IACvC,MAAMC,WAAW,GAAC,EAAE;IACpB,IAAGD,MAAM,CAACE,MAAM,KAAG,CAAC,EACpB,OAAOH,KAAK;IACdI,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;IACnB,KAAI,MAAMK,IAAI,IAAIN,KAAK,EAAC;MAEtB,IAAGC,MAAM,CAACM,QAAQ,CAACD,IAAI,CAAC,MAAM,CAAC,CAAC,EAChC;QACEJ,WAAW,CAACM,IAAI,CAACF,IAAI,CAAC;;;IAG1BF,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxB,OAAOA,WAAW;EAClB;EAAC,QAAAO,CAAA,G;qBAhBUX,UAAU;EAAA;EAAA,QAAAY,EAAA,G;;UAAVZ,UAAU;IAAAa,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}