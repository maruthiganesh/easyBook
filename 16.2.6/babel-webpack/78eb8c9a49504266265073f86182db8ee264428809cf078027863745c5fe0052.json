{"ast":null,"code":"import { map } from 'rxjs/operators';\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllDetails() {\n    return this.http.get('data/movie_details.json').pipe(map(data => {\n      // for(const id in data)\n      // if(data.hasOwnProperty(id))\n      // movieArray.push(data[id]);\n      const movieArray = data;\n      return movieArray;\n    }));\n  }\n}","map":{"version":3,"names":["map","MovieService","constructor","http","getAllDetails","get","pipe","data","movieArray"],"sources":["E:\\Projects\\easyBook\\easyBook-app\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\ninterface MovieDetails {\n  \n  ID: string;\n  Name: string;\n  Genre:string;\n  Type:string;\n  Price:string;\n\n}\nexport class MovieService {\n\n  constructor(private http:HttpClient) { }\n\n  getAllDetails() {\n    return this.http.get<MovieDetails[]>('data/movie_details.json').pipe(\n      map((data:MovieDetails[])=>\n      {\n        // for(const id in data)\n        // if(data.hasOwnProperty(id))\n        // movieArray.push(data[id]);\n        const movieArray: MovieDetails[] = data;\n        return movieArray;\n      })\n    );\n  \n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;AAcpC,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAiB,yBAAyB,CAAC,CAACC,IAAI,CAClEN,GAAG,CAAEO,IAAmB,IAAG;MAEzB;MACA;MACA;MACA,MAAMC,UAAU,GAAmBD,IAAI;MACvC,OAAOC,UAAU;IACnB,CAAC,CAAC,CACH;EAEH"},"metadata":{},"sourceType":"module","externalDependencies":[]}