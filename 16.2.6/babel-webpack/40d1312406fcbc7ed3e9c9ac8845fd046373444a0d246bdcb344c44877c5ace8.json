{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  transform(value, filter, movieName) {\n    const resultArray = [];\n    if (value.length === 0 || filter === '' || movieName === '') return value;\n    for (const item of value) {\n      if (item[movieName] === filter) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n  static #_ = this.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FilterPipe","transform","value","filter","movieName","resultArray","length","item","push","_","_2","pure"],"sources":["E:\\Projects\\easyBook\\easyBook-app\\src\\app\\pipe\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filter:Array<any>, movieName:string): any[] {\n    const resultArray=[];\n    if(value.length===0 ||filter==='' || movieName==='')\n    return value;\n  for(const item of value){\n    if(item[movieName]===filter)\n    {\n      resultArray.push(item);\n    }\n  }\n  return resultArray;\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,UAAU;EAErBC,SAASA,CAACC,KAAY,EAAEC,MAAiB,EAAEC,SAAgB;IACzD,MAAMC,WAAW,GAAC,EAAE;IACpB,IAAGH,KAAK,CAACI,MAAM,KAAG,CAAC,IAAGH,MAAM,KAAG,EAAE,IAAIC,SAAS,KAAG,EAAE,EACnD,OAAOF,KAAK;IACd,KAAI,MAAMK,IAAI,IAAIL,KAAK,EAAC;MACtB,IAAGK,IAAI,CAACH,SAAS,CAAC,KAAGD,MAAM,EAC3B;QACEE,WAAW,CAACG,IAAI,CAACD,IAAI,CAAC;;;IAG1B,OAAOF,WAAW;EAClB;EAAC,QAAAI,CAAA,G;qBAbUT,UAAU;EAAA;EAAA,QAAAU,EAAA,G;;UAAVV,UAAU;IAAAW,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}